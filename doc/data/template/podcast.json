{"class":{"classname":"Podcast","templatetag":"podcast","description":null},"methods":[{"methodname":"title","title":"Title","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"subtitle","title":"Subtitle","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"summary","title":"Summary","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"imageUrl","title":"Image URL","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"authorName","title":"Author name","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"ownerName","title":"Owner name","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"ownerEmail","title":"Owner email","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"publisherName","title":"Publisher name","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"publisherUrl","title":"Publisher URL","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"landingPageUrl","title":"Podcast Home URL","description":null,"tags":[{"name":"accessor","description":"","line":2}]},{"methodname":"episodes","title":"Episodes","description":"Filter and order episodes with parameters:\n\n- post_id: one episode matching the given post id\n- post_ids: list of episodes matching the given list of post ids\n- category: list of episodes matching the category slug\n- slug: one episode matching the given slug\n- slugs: list of episodes matching the given list of slugs\n- post_status: Publication status of the post. Defaults to 'publish'\n- order: Designates the ascending or descending order of the 'orderby' parameter. Defaults to 'DESC'.\n  - 'ASC' - ascending order from lowest to highest values (1, 2, 3; a, b, c).\n  - 'DESC' - descending order from highest to lowest values (3, 2, 1; c, b, a).\n- orderby: Sort retrieved episodes by parameter. Defaults to 'publicationDate'.\n  - 'publicationDate' - Order by publication date.\n  - 'recordingDate' - Order by recording date.\n  - 'title' - Order by title.\n  - 'slug' - Order by episode slug.\n - 'limit' - Limit the number of returned episodes.\n\n**Examples**\n\nIterate over all published episodes, ordered by publication date.\n\n```\n{% for e in podcast.episodes %}\n  {{ e.title }}\n{% endfor %}\n```\n\nOrder by title in ascending order.\n\n```\n{% for e in podcast.episodes({orderby: 'title', 'order': 'ASC'}) %}\n  {{ e.title }}\n{% endfor %}\n```\n\nFetch one episode by slug.\n\n```\n{{ podcast.episodes({slug: 'pod001'}).title }}\n```\n","tags":[{"name":"accessor","description":"","line":45},{"name":"see","description":"episode","line":44}]},{"methodname":"feeds","title":"Feeds","description":null,"tags":[{"name":"accessor","description":"","line":3},{"name":"see","description":"feed","line":2}]},{"methodname":"license","title":"License","description":"To render an HTML license, use \n`{% include '@core\/license.twig' with {'license': podcast.license} %}`\n","tags":[{"name":"accessor","description":"","line":6},{"name":"see","description":"license","line":5}]},{"methodname":"setting","title":"Get a podcast setting.","description":"Valid namespaces \/ names:\n\n ```\n website\n \tmerge_episodes\n \thide_wp_feed_discovery\n \tuse_post_permastruct\n \tcustom_episode_slug\n \tepisode_archive\n \tepisode_archive_slug\n \turl_template\n \tssl_verify_peer\n metadata\n \tenable_episode_recording_date\n \tenable_episode_explicit\n \tenable_episode_license\n redirects\n \tpodlove_setting_redirect\n tracking\n \tmode\n ```\n","tags":[{"name":"accessor","description":"","line":24}]},{"methodname":"contributors","title":"List of podcast contributors.","description":"**Examples**\n\nIterating over a list of contributors\n\n```jinja\n{% for contributor in podcast.contributors({scope: \"podcast\"}) %}\n\t{{ contributor.name }}\n\t{% if not loop.last %}, {% endif %}\n{% endfor %}\n```\n\nIterating over a grouped list of contributors\n\n```jinja\n{% for contributorGroup in podcast.contributors({scope: \"podcast\", groupby: \"group\"}) %}\n\t<strong>{{ contributorGroup.group.title }}:<\/strong> \n\t{% for contributor in contributorGroup.contributors %}\n\t\t{{ contributor.name }}\n\t\t{% if not loop.last %}, {% endif %}\n\t{% endfor %}\n{% endfor %}\n```\n\n**Parameters**\n\n- **id:**      Fetch one contributor by its id. Ignores all other parameters.\n               Example: `podcast.contributors({id: 'james'}).name`\n- **scope:**   Either \"global\", \"global-active\" or \"podcast\".\n               - \"global\" returns all contributors.\n               - \"global-active\" returns all contributors with \n                  at least one contribution in a published episode.\n\t              - \"podcast\" returns the contributors configured in podcast settings.\n\t              Default: \"global-active\".\n- **group:**   filter by group slug. Defaults to \"all\", which does not filter.\n- **role:**    filter by role slug. Defaults to \"all\", which does not filter.\n- **groupby:** group or role slug. Group by \"group\" or \"role\".\n\t              If used, the returned data is has another layer for the groups.\n\t              See examples for more details.\n- **order:**   Designates the ascending or descending order of the 'orderby' parameter. Defaults to 'DESC'.\n  - 'ASC' - ascending order from lowest to highest values (1, 2, 3; a, b, c).\n  - 'DESC' - descending order from highest to lowest values (3, 2, 1; c, b, a).\n- **orderby:** Sort contributors by parameter. Defaults to 'name'.\n  - 'name' - Order by public name.\n","tags":[{"name":"dynamicAccessor","description":"podcast.contributors","line":47},{"name":"accessor","description":"","line":46}],"class":"podcast"},{"methodname":"services","title":"List of service profiles","description":"Parameters:\n\n- **category:** (optional) \"social\", \"donation\" or \"all\". Default: \"all\"\n- **type:**     (optional) Filter services by type. List of all service types: 500px, amazon wishlist, app.net, bandcamp, bitbucket, bitcoin, deviantart, diaspora, dogecoin, dribbble, facebook, flattr, flickr, generic wishlist, github, google+, instagram, jabber, last.fm, linkedin, litecoin, openstreetmap, paypal, miiverse, pinboard, pinterest, playstation network, skype, soundcloud, soup, steam, steam wishlist, thomann wishlist, twitch, tumblr, twitter, website, xbox live, xing, youtube\n\nExample:\n\n```html\n{% for service in podcast.services({category: \"social\"}) %}\n  <a target=\"_blank\" title=\"{{ service.title }}\" href=\"{{ service.profileUrl }}\">\n    <img width=\"32\" height=\"32\" src=\"{{ service.logoUrl }}\" class=\"podlove-contributor-button\" alt=\"{{ service.title }}\" \/>\n  <\/a>\n{% endfor %}\n```\n","tags":[{"name":"dynamicAccessor","description":"podcast.services","line":18},{"name":"accessor","description":"","line":17}],"class":"podcast"},{"methodname":"subscribeButton","title":"Podcast Subscribe Button","description":"**Examples**\n\n```jinja\n{{ podcast.subscribe_button }}\n```\n\n```jinja\n{{ podcast.subscribe_button({size: 'small', width: '', colors: 'black;;;#ffffff'}) }}\n```\n\n**Parameters**\n\n- **language:** 'de', 'en' or 'ja'. Defaults to podcast language setting.\n- **size:** Size and style of the button ('small', 'medium', 'big', 'big-logo'). Default: 'big-logo'\n- **buttonid:** Use this if you want to trigger the button by clicking an element controlled by you. \nIf you set the buttonid to \"example123\", your element must have the class \"podlove-subscribe-button-example123\".\n- **hide:** Set to `true` if you want to hide the default button element. Useful if you provide your own button via the `buttonid` setting.\n- **colors:** 9 colors, separated by semocolon, can be configured. Any blank color uses the default.\n\nThe colors are:\n\n1. buttonBackgroundColor\n2. buttonHoverBackgroundColor\n3. buttonActiveBackgroundColor\n4. buttonTextColor\n5. buttonHoverTextColor\n6. buttonActiveTextColor\n7. buttonBorderColor\n8. listHighlightBackgroundColor\n9. listHighlightTextColor\n\n**Please Note:** It is not possible to style multiple buttons\/popups on the same page differently.\n\nExample color configurations:\n\n- Complete: `#75ad91;#75c39d;#61937b;#ffffff;#ffffff;#ffffff;#456757;#328398;#ffffff`\n- Idle button background and text color: `#75ad91;;;#ffffff`\n","tags":[{"name":"dynamicAccessor","description":"podcast.subscribeButton","line":41},{"name":"accessor","description":"","line":40}],"class":"podcast"}]}