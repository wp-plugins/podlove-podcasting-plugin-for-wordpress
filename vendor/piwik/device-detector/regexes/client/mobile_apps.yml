###############
# Device Detector - The Universal Device Detection library for parsing User Agents
#
# @link http://piwik.org
# @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
###############

# AndroidDownloadManager
- regex: 'AndroidDownloadManager(?:[ /]([\d\.]+))?'
  name: 'AndroidDownloadManager'
  version: '$1'

# AFNetworking generic
- regex: '([^/]+)/(\d+(?:\.\d+)+) \((?:iPhone|iPad); iOS [0-9\.]+; Scale/[0-9\.]+\)'
  name: '$1'
  version: '$2'

# FeedR
- regex: 'FeedR(?:/([\d\.]+))?'
  name: 'FeedR'
  version: '$1'

# WeChat
- regex: 'MicroMessenger/([^ ]+)'
  name: 'WeChat'
  version: '$1'

# Sina Weibo
- regex: '.*__weibo__([0-9\.]+)__'
  name: 'Sina Weibo'
  version: '$1'

# Windows Phone
- regex: NativeHost
  name: Windows Phone App
  version: 

- regex: 'Instacast(?:HD)?/(\d\.[\d\.abc]+) CFNetwork/([\d\.]+) Darwin/([\d\.]+)'
  name: Instacast
  version: $1

-
  regex: 'Podcasts/([\d\.]+)'
  name: Podcasts
  version: $1

-
  regex: 'Pocket Casts(?:, (?:Android|iOS) v([\d\.]+))?'
  name: Pocket Casts
  version: $1

-
  regex: 'BeyondPod'
  name: BeyondPod
  version:

-
  regex: 'AntennaPod/([\d\.]+)'
  name: AntennaPod
  version: $1

-
  regex: 'Overcast/([\d\.]+)'
  name: Overcast
  version: $1

- regex: 'Podkicker(?: Pro)?/([\d\.]+)'
  name: Podkicker
  version: $1

- regex: 'Castro/(\d+)'
  name: Castro
  version: $1

- regex: 'DoggCatcher'
  name: DoggCatcher
  version: